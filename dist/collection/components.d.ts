/**
 * This is an autogenerated file created by the Stencil build process.
 * It contains typing information for all components that exist in this project
 * and imports for stencil collections that might be configured in your stencil.config.js file
 */

import { AmeEdit as AmeEdit } from './components/ame-edit/ame-edit';

interface HTMLAmeEditElement extends AmeEdit, HTMLElement {
}
declare var HTMLAmeEditElement: {
  prototype: HTMLAmeEditElement;
  new (): HTMLAmeEditElement;
};
declare global {
  interface HTMLElementTagNameMap {
      "ame-edit": HTMLAmeEditElement;
  }
  interface ElementTagNameMap {
      "ame-edit": HTMLAmeEditElement;
  }
  namespace JSX {
      interface IntrinsicElements {
          "ame-edit": JSXElements.AmeEditAttributes;
      }
  }
  namespace JSXElements {
      export interface AmeEditAttributes extends HTMLAttributes {
        
      }
  }
}

import { AmeRevert as AmeRevert } from './components/ame-revert/ame-revert';

interface HTMLAmeRevertElement extends AmeRevert, HTMLElement {
}
declare var HTMLAmeRevertElement: {
  prototype: HTMLAmeRevertElement;
  new (): HTMLAmeRevertElement;
};
declare global {
  interface HTMLElementTagNameMap {
      "ame-revert": HTMLAmeRevertElement;
  }
  interface ElementTagNameMap {
      "ame-revert": HTMLAmeRevertElement;
  }
  namespace JSX {
      interface IntrinsicElements {
          "ame-revert": JSXElements.AmeRevertAttributes;
      }
  }
  namespace JSXElements {
      export interface AmeRevertAttributes extends HTMLAttributes {
        
      }
  }
}

import { AmeText as AmeText } from './components/ame-text/ame-text';

interface HTMLAmeTextElement extends AmeText, HTMLElement {
}
declare var HTMLAmeTextElement: {
  prototype: HTMLAmeTextElement;
  new (): HTMLAmeTextElement;
};
declare global {
  interface HTMLElementTagNameMap {
      "ame-text": HTMLAmeTextElement;
  }
  interface ElementTagNameMap {
      "ame-text": HTMLAmeTextElement;
  }
  namespace JSX {
      interface IntrinsicElements {
          "ame-text": JSXElements.AmeTextAttributes;
      }
  }
  namespace JSXElements {
      export interface AmeTextAttributes extends HTMLAttributes {
        
          revert?: any,
          value?: any,
          text?: any,
          editable?: boolean | "true" | "false"
      }
  }
}

